<div id="map"></div>
<script>
  var map, included_users, excluded_users, markers, marker, latLng, icon
  function addUserToMap(options) {
    latLng = {lat: options['user']['latitude'], lng: options['user']['longitude']}
    if (options['included'] == true) {
      // use blue color for customers within the distance bounds
      icon = 'http://maps.google.com/mapfiles/kml/paddle/blu-blank.png'
    } else {
      // use red color otherwise
      icon = 'http://maps.google.com/mapfiles/kml/paddle/red-blank.png'
    }
    marker = new google.maps.Marker({
      position: latLng,
      map: options['map'],
      title: options['user']['name'],
      icon: icon
    })
  }
  function initMap() {
    // this function is run as a callback when the Google Maps JS library is loaded
    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 53.3381985, lng: -6.2592576},
      zoom: 6
    });
    // @customers denotes people within the distance-filter's bounds
    // @excluded_users repesents people outside the bounds
    included_users = JSON.parse('<%= @customers.to_json %>') // pass variables from Ruby to JS
    excluded_users = JSON.parse('<%= @excluded_users.to_json %>')
    included_users.forEach(function(user){
      addUserToMap({user: user, map: map, included: true})
    }) 
    excluded_users.forEach(function(user){
      addUserToMap({user: user, map: map, included: false})
    })
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_MAPS_API_KEY"] %>&callback=initMap"
async defer></script>
